{"version":3,"sources":["resources/img/mjolnir.png","hooks/http.hook.js","services/MarvelService.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/appHeader/AppHeader.js","components/pages/SingleComicPage.js","components/pages/404.js","components/app/App.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useMarvelService","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","View","imgStyle","className","href","RandomChar","setChar","useEffect","updateChar","onCharLoaded","Math","floor","random","then","errorMessage","spinner","contetnt","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","arr","item","onCharSelected","renderItems","disabled","Skeleton","length","i","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","MainPage","selectedChar","setSelectedChar","decoration","AppBanner","avengers","avengersLogo","ComicsList","comicsList","setComicsList","comicsEnded","setComicsEnded","onComicsListLoaded","newComicsList","to","ComicsPage","AppHeader","end","color","isActive","comic","SingleComicPage","comicId","useParams","setComic","updateComic","onComicLoaded","Page404","App","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.df38de59.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useCallback } from \"react\";\n\nconst useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        setLoading(true); // отрисовываем загрузку\n\n        // далее отрправка fetch на сервер\n        try {\n            const response = await fetch(url, {method, body, headers}); // ждем ответ-промис, приходит url и объект с остальными аргументами\n\n            // проверка овтета\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status ${response.status}`)\n            }\n\n            // в data помещаем тот самый ответ  \n            const data = await response.json();\n\n            setLoading(false); // убираем загрузку, тк данные получили\n            // функция request возвращает данные, которые были получены\n            return data;\n\n        } catch(e) {\n            setLoading(false);\n            setError(e.message);\n            throw e;\n\n        }\n\n    }, []);\n    // чистка ошибки, уберет ошибку и загрузит персонажа\n    const clearError = useCallback(() => setError(null), []);\n\n    return {\n        loading, \n        error, \n        request, \n        clearError\n    }\n}\n\nexport default useHttp;","import useHttp from '../hooks/http.hook';\n\n\nconst  useMarvelService = () => {\n\n    const {loading, request, error, clearError} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=72d543b70c30dd47ad2680e074f996be';\n    const _baseOffset = 210;\n\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter)\n    }\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getAllComics = async () => {\n        const res = await request(`${_apiBase}comics?${_apiKey}`);\n        return res.data.results.map(_transformComics);\n    }\n\n    const getComic = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    }\n\n    const _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n\n    const _transformComics = (comics) => {\n        return {\n            id: comics.id,\n            title: comics.title,\n            description: comics.description || 'There is no description',\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n            language: comics.textObjects.language || 'en-us',\n            price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available'\n        }\n    }\n\n    return {loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComic}\n}\n\nexport default useMarvelService;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return(\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt='error' />\n    )\n}\n\nexport default ErrorMessage;","import { useState, useEffect } from 'react';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nconst RandomChar = () => { // основное компонент - компонент логики\n    \n    const [char, setChar] = useState({});\n\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, []);\n\n    const onCharLoaded = (char) => { // изменяет состояние спинера\n        setChar(char);\n    }\n\n\n    const updateChar = () => { // рандомный персонаж\n        clearError(); // чистим ошибку\n        let id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        getCharacter(id)\n            .then(onCharLoaded);\n    }\n\n    \n        \n    const errorMessage = error ? <ErrorMessage/> : null,\n            spinner = loading ? <Spinner/> : null,\n            contetnt = !(loading || error) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {contetnt}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n    \n}\n\nconst View = ({char}) => { // простой компонент рендера, в нем нет лоигки; получает объект с данными и отрисовывает верстку\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'unset'};\n    }\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { useState, useEffect } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './charList.scss';\n\nconst CharList = (props) => {\n    \n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n\n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, []);\n\n    // метод для запросов на сервер\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded);\n    }\n\n    const onCharListLoaded = (newCharList) => { // изменяет состояние спинера\n        let ended = false;\n\n        if (newCharList < 9) {\n            ended = true\n        }\n\n        setCharList(charList => [...charList, ...newCharList]); // то есть в charList содержится старый charList и порция новых данных newCharList\n        // setLoading(false);\n        setNewItemLoading(false);\n        setOffset(offset => offset + 9);\n        setCharEnded(ended);\n\n    }\n\n    function renderItems(arr) {\n        const items = arr.map((item) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n\n            return(\n                <li className=\"char__item\" key={item.id} onClick={() => props.onCharSelected(item.id)}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n\n        return(\n            <ul className=\"char__grid\">\n                {items}\n            </ul> \n        )\n    }\n\n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null,\n            spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport useMarvelService from '../../services/MarvelService';\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, [props.charId]); \n\n    const updateChar = () => {\n        const {charId} = props;\n        if (!charId) {\n            return;\n        }\n\n        clearError();\n        getCharacter(charId)\n            .then(onCharLoaded);\n    }\n\n    const onCharLoaded = (char) => { // изменяет состояние спинера\n        setChar(char);\n    }\n\n    const skeleton = char || loading || error ? null : <Skeleton/>;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const contetnt = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {contetnt}\n        </div>\n    )\n}\n\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'unset'};\n    }\n    return(\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'No comics'}\n                {\n                    comics.map((item, i) => {\n                        if (i > 9) return;\n                        return(\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        ) \n                    })\n                }\n                \n            </ul>\n        </>\n    )\n}\n\nexport default CharInfo;","import {Component} from 'react';\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log(error, errorInfo);\n        this.setState({\n            error: true\n        })\n    }\n\n    render() {\n        if(this.state.error === true) {\n            return <h1>ОШИБОЧКА</h1>\n        }\n\n        return this.props.children;\n    }\n};\n\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {React, useState } from \"react\"; \nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\n\nconst MainPage = () => {\n    const [selectedChar, setSelectedChar] = useState(null);\n\n    const onCharSelected = (id) => {\n        setSelectedChar(id)\n    }\n    \n\n    return (\n        <>\n            <RandomChar/>\n            <div className=\"char__content\">\n                <CharList onCharSelected={onCharSelected} /> \n                <ErrorBoundary>\n                    <CharInfo charId={selectedChar} />\n                </ErrorBoundary>\n            </div>\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n        </>\n    );\n};\n\nexport default MainPage;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport {Link} from \"react-router-dom\";\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n    \n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics, clearError} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, []);\n\n    // метод для запросов на сервер\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded);\n    }\n\n    const onComicsListLoaded = (newComicsList) => { // изменяет состояние спинера\n        let ended = false;\n\n        if (newComicsList.length < 8) {\n            ended = true\n        }\n        clearError()\n        setComicsList([...comicsList, ...newComicsList]); // то есть в comicsList содержится старый comicsList и порция новых данных newComicsList\n        setNewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n\n    }\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            return(\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul> \n        )\n    }\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null,\n          spinner = loading && !newItemLoading ? <Spinner/> : null;\n    \n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': comicsEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">Загрузить еще</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import React from 'react';\n\nimport AppBanner from \"../appBanner/AppBanner\";\nimport ComicsList from \"../comicsList/ComicsList\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nconst ComicsPage = () => {\n    return (\n        <>\n            <AppBanner/>\n            <ComicsList/>\n        </>\n    );\n};\n\nexport default ComicsPage;","import {Link, NavLink} from \"react-router-dom\";\n\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/\">\n                    информационный портал <span>Marvel</span>\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink end style={({isActive}) => ({color: isActive ? '#9f0013' : 'inherit'})} to=\"/\">Персонажи</NavLink></li>\n                    /\n                    <li><NavLink  style={({isActive}) => ({color: isActive ? '#9f0013' : 'inherit'})} to=\"/comics\">Комиксы</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","import { useParams, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport AppBanner from \"../appBanner/AppBanner\";\nimport './singleComicPage.scss';\n\nconst SingleComicPage = () => {\n    const {comicId} = useParams();\n    const [comic, setComic] = useState(null);\n    \n    const {loading, error, getComic, clearError} = useMarvelService();\n    \n    useEffect(() => {\n        updateComic()\n    }, [comicId])\n\n    const updateComic = () => {\n        clearError();\n        getComic(comicId)\n            .then(onComicLoaded)\n    }\n\n    const onComicLoaded = (comic) => {\n        setComic(comic);\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const contetnt = !(loading || error || !comic) ? <View comic={comic}/> : null;\n\n    return (\n        <>\n            <AppBanner/>\n            {errorMessage}\n            {spinner}\n            {contetnt}\n        </>\n    )\n}\n\nconst View = ({comic}) => {\n    const {title, description, thumbnail, pageCount, language, price} = comic;\n    return(\n        <div className=\"single-comic\">\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">{title}</h2>\n                <p className=\"single-comic__descr\">{description}</p>\n                <p className=\"single-comic__descr\">{pageCount}</p>\n                <p className=\"single-comic__descr\">Language: {language}</p>\n                <div className=\"single-comic__price\">{price}</div>\n            </div>\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\n        </div>\n    )\n}\n\nexport default SingleComicPage;","import ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport {Link} from \"react-router-dom\";\n\nconst Page404 = () => {\n    return (\n        <div>\n            <ErrorMessage/>\n            <p style={{'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px'}}>Страницы не существует</p>\n            <Link style={{'display': 'block', 'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px', 'marginTop': '30px', 'color': '#9f0013'}} to=\"/marvel_build\">Вернуться на главную</Link>\n        </div>\n    )\n};\n\nexport default Page404;","import { HashRouter as Router, Route, Routes} from \"react-router-dom\";\n\nimport MainPage from \"../pages/MainPage\";\nimport ComicsPage from \"../pages/ComicsPage\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport SingleComicPage from \"../pages/SingleComicPage\";\nimport Page404 from \"../pages/404\";\n\n\nconst App = () => {\n    \n    return (\n        <Router>\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <Routes>\n                        <Route path=\"/\" element={<MainPage/>} />\n                        <Route path=\"/comics\" element={<ComicsPage/>} />\n                        <Route path=\"/comics/:comicId\" element={<SingleComicPage/>} />\n                        <Route path=\"*\" element={<Page404/>}/>\n                    </Routes>\n                </main>\n            </div>\n        </Router>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM\n  .createRoot(document.getElementById('root'))\n  .render(\n      <App />\n  );\n\n"],"sourceRoot":""}